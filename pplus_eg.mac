/*
   Computes proportion correct for a set of items. Can have items worth more than one point.
   Scale  : Name for the set of items
   InDir  : Directory where the input data resides
   Infile : File with the data
   OutDir : Directory where to store the results
   OutFile: Name of output file (no spaces allowed)
   Cvars  : Classification variable(s)
   ItemSet: Variable name for the items (these need to be already scored)
   wgt    : the sampling weight
   jkz    : the jk zone variables (has value 1 to nrwgt)
   jkr    : the jk rep variable (has values 0 or 1)
   jk2type: whether to use both replicates (FULL) or only one (HALF) for the variance estimation 
   nrwgt  : the number of replicate weights to create (when jk2type=FULL->JKzones*2; otherwise use JKzones*1)
   maxpts : the maximum number of points on each of the items (if none are specified, 1 is assumed) 
*/

%macro pplus(scale   = ,
             indir   = ,
             infile  = ,
             outdir  = ,
             outfile = ,
             cvars   = ,
             wgt     = totwgt,
             nrwgt   = 150,
             jkz     = jkzone, 
             jkr     = jkrep,
             jk2type = full,
             itemset = ,
             SelVar=  ,
             SelCrit=  ,
             maxpts  = ,
             clean   = Y,
             viewcod = N );

proc optsave;
*ods listing close;

libname indir  "&indir";
libname outdir "&outdir";

options nofmterr nocenter ls=132 append=(fmtsearch=(indir outdir));

* To show or not the code generated by the macro;
options nomprint;
%if %upcase(&viewcod = Y) %then options mprint;;

* To direct log and output to a different window;
data _null_; call symput("mode",getoption('sysin')); run;

%if "&mode" = "" %then %let mode = DMS;
%else %let mode = BATCH;
%put Mode is &mode;
%if &mode = BATCH %then %do;
proc printto log   = "&outdir./&outfile &mode..log" new;
ods html path="&outdir" (url=none) file = "&outfile._Output.html";
ods html select all;
%end;
%if &mode = DMS %then %do;
dm log "clear";
dm out "clear";
dm odsresults "clear";
ods html path="&outdir"  (url=none) file = "&outfile._Output.html";
ods html select all;
%end;

%if (%upcase(&jk2type = FULL)) %then %let varfac = 0.5;
%if (%upcase(&jk2type = HALF)) %then %let varfac = 1.0;

options fmtsearch =(indir outdir);

%let vitm = ;

data vitmfile;
  set indir.&infile (keep = &cvars &wgt &jkz &jkr &itemset &selvar);

  where n(%do i = 1 %to %sysfunc(countw(&itemset)); %scan(&itemset,&i) , %end; 1) > 1;

 %if %length(&selcrit) > 0 %then %do;
   where &selcrit;
 %end;

%do i = 1 %to %sysfunc(countw(&itemset));
%let itm  = %scan(&itemset,&i);
%let ms = %scan(&maxpts,&i);
%if &ms = %then %let ms = 1;
%do s = 1 %to &ms;
select ;
when (missing(&itm)) &itm._&s = . ;
when (&itm >  &ms) &itm._&s = 999;
when (&ms  >= &itm >= &s) &itm._&s = 1;
when (&itm <  &s) &itm._&s = 0;
%let vitm = &vitm &itm._&s;
otherwise;
end;
%end;
%end;

run;

proc means data=vitmfile mean min max;
 title "Original Item Responses";
 var &itemset ;

proc means data=vitmfile mean min max;
 title "Recoded Item Responses";
 var &vitm ;


%do i = 1 %to %sysfunc(countw(&vitm));
%let itm = %scan(&vitm,&i);
data &itm._0;
 set vitmfile (keep = &cvars &wgt &jkz &jkr &itm);
 where not(missing(&itm));
 k = 1;
* Replicate weights are computed here;
array rwgt  rwgt1 - rwgt&nrwgt     ;         * Replicate Weights   ;
%if %upcase(&jk2type = FULL) %then %do;
do r=1 to &nrwgt;
if  (&jkz ~=  int((r+1)/2)) then rwgt(r) = &wgt * 1;
else                             rwgt(r) = &wgt * (2 * mod(&jkr + r,2));
end ;
%end;
%if %upcase(&jk2type = HALF) %then %do;
do r=1 to &nrwgt;
if  (&jkz ~=  r) then rwgt(r) = &wgt * 1;
else                  rwgt(r) = &wgt * (2 * mod(&jkr,2));
end ;
%end;

&itm._0 = &itm * &wgt;
array &itm._(&nrwgt);
do r = 1 to &nrwgt;
&itm._(r) = &itm * rwgt(r);
end;

run;

proc summary data = &itm._0 nway missing;
  class k &cvars;
  var &itm._0 &wgt
      &itm._1 -- &itm._&nrwgt
      rwgt1 -- rwgt&nrwgt ;
  output out = &itm._s sum= ;
    run;
* need to add _freq_ here?;

data &itm (keep = k &cvars item
                   pplus rpplus1-rpplus&nrwgt);
         set &itm._s;
         length Item $16;
         Item ="%upcase(&itm)";
if (&wgt > 0.0) then pplus = &itm._0 / &wgt;
    array rwgt rwgt1 -- rwgt&nrwgt;
    array rpplus(&nrwgt);
    array itm &itm._1 -- &itm._&nrwgt;
    do r = 1 to &nrwgt;
if (rwgt(r) > 0.0) then rpplus(r) = itm(r) / rwgt(r);
    end;
    run;

%end;

data outdir.&outfile._dtl;
 set
    %do itm = 1 %to %sysfunc(countw(&vitm));
      %scan(&vitm,&itm)
    %end;;

     array rpplus rpplus1-rpplus&nrwgt;
     pplus_var = 0;
     do i = 1 to &nrwgt;
        pplus_var = pplus_var + (rpplus(i) - pplus)**2 ;
     end ;
     pplus_se = sqrt(pplus_var * &varfac) ;

run;

proc export data= outdir.&outfile._dtl
  outfile= "&outdir.\&outfile._dtl_&mode..csv"
  replace;
run;

proc means data = outdir.&outfile._dtl nway noprint missing;
     class k &cvars;
     var pplus rpplus1-rpplus&nrwgt;
     output out = tmp2 mean(pplus rpplus1-rpplus&nrwgt )=
                            pplus rpplus1-rpplus&nrwgt ;
run;

data tmp3;
     set tmp2 (drop=_type_);
     length scale $32;
     scale = "&scale";
     rename _freq_ = TotalPoints;

     array rpplus rpplus1-rpplus&nrwgt;
     pplus_var = 0;
     do i = 1 to &nrwgt;
        pplus_var = pplus_var + (rpplus(i) - pplus)**2 ;
     end ;
     pplus_se = sqrt(pplus_var * &varfac) ;

run;

data &outfile;
     set tmp3;
     TotalItems = %sysfunc(countw(&itemset));
     MaxPoints  = %sysfunc(countw(&vitm));
     keep &cvars pplus pplus_se scale MaxPoints TotalItems TotalPoints;

run;

* Compute here the table mean and its standard error;

proc summary data=&outfile nway missing;
     var pplus pplus_se;
     class %do v=2 %to %sysfunc(countw(&cvars k)); %scan(&cvars,&&v) %end; scale;
     output out = tblmean  uss(pplus_se ) = ssq_se
                             n(pplus    ) = pplus_n
                          mean(pplus    ) = pplus    ;
run;

data tblmean (drop = ssq_se _type_ _freq_ pplus_n);
     set tblmean;
if (pplus_n > 0.0) then pplus_se = sqrt(ssq_se/pplus_n**2);
run;

data outdir.&outfile._ttl;
     set &outfile tblmean (in=InMean);
     scale = "&Scale";
     TblMn = InMean;

proc export data= outdir.&outfile._ttl
  outfile= "&outdir.\&outfile._ttl_&mode..csv"
  replace;
run;

proc print data = outdir.&outfile._ttl;
 title "Summary Statistics";
 run;


%if &mode = BATCH %then %do;
proc printto; 
ods html close;
run;
%end;
%if &mode = DMS %then %do;
*write output from windows to external file;
*dm out "file '&outdir./&outfile &mode..lst' replace";
dm log "file '&outdir./&outfile &mode..log' replace";
ods html close;
%end;
title;
run;

ods listing;
proc optload;
run;
%mend pplus;
